name: Create Pull Request
on:
  issue_comment:
    types: [created]

jobs:
  createPullRequest:
    if: |
      github.event_name == 'issue_comment' &&
      (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') &&
      startsWith(github.event.comment.body, '/create-release')
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.13.0-chrome80-ff74
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node_version: 12
          registry-url: 'https://npm.pkg.github.com'
      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "init-author-name=Frontegg LTD" > .npmrc
          echo "init-author-email=hello@frontegg.com" >> .npmrc
          echo "init-author-url=https://frontegg.com" >> .npmrc
          echo "init-license=MIT" >> .npmrc
          echo "always-auth=true" >> .npmrc
          echo "registry=https://registry.npmjs.org" >> .npmrc
          echo "_authToken=$NPM_TOKEN" >> .npmrc
          echo "@frontegg:registry=https://registry.npmjs.org" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Install Dependencies and Build Packages
        run: yarn
      - name: Build Packages
        run: yarn build
      - name: Git Identity
        run: |
          git config --global user.name 'frontegg'
          git config --global user.email 'frontegg@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "init-author-name=Frontegg LTD" > .npmrc
          echo "init-author-email=hello@frontegg.com" >> .npmrc
          echo "init-author-url=https://frontegg.com" >> .npmrc
          echo "init-license=MIT" >> .npmrc
          echo "always-auth=true" >> .npmrc
          echo "registry=https://registry.npmjs.org" >> .npmrc
          echo "_authToken=$NPM_TOKEN" >> .npmrc
          echo "@frontegg:registry=https://registry.npmjs.org" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
#      - name: Commit Version UP
#        run: |
#          cd ./projects/frontegg-app && npm version patch
#          git add . && git commit -m "chore(release): publish `node -p 'require("./projects/frontegg-app/package.json").version'`"
#      - name: Set current CHANGELOG to output
#        id: changelog
#        shell: bash -ex {0}
#        run: |
#          version=$(node -p 'require("./projects/frontegg-app/package.json").version')
#          changelog=$(node -p "(function(){var changelog = require('fs').readFileSync('./CHANGELOG.md', {encoding: 'utf8'}); changelog = changelog.substring(changelog.indexOf('## [')); return changelog.substring(0, changelog.indexOf('\n## ['))})()")
#          echo "::set-output name=version::${version}"
#          echo "::set-output name=changelog::${changelog}"
#      - name: Create Pull Request
#        id: cpr
#        uses: peter-evans/create-pull-request@v3.5.1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          path: ${{ secrets.GITHUB_WORKSPACE }}
#          commit-message: "Update v${{ steps.changelog.outputs.version }}"
#          committer: GitHub <noreply@github.com>
#          author: "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
#          title: 'v${{ steps.changelog.outputs.version }}'
#          body: |
#            # v${{ steps.changelog.outputs.version }}
#
#            ${{steps.changelog.outputs.changelog}}
#
#          labels: "Type: Release"
#          branch: "release/next"
